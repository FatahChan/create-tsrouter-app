import { defineConfig } from "vite";
import viteReact from "@vitejs/plugin-react";<% if (tailwind) { %>
import tailwindcss from "@tailwindcss/vite";
<% } %><% if (addOnEnabled['pwa']) { %>
import { VitePWA } from 'vite-plugin-pwa';
import pkg from './package.json';
<% } %><%if (fileRouter) { %>
import { TanStackRouterVite } from "@tanstack/router-plugin/vite";<% } %><% if (addOnEnabled['module-federation']) { %>
import { federation } from "@module-federation/vite";<% } %>
import { resolve } from "node:path";<% if (addOnEnabled['module-federation']) { %>
import federationConfig from "./module-federation.config.js";
<% } %>

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [<% if(fileRouter) { %>TanStackRouterVite({ autoCodeSplitting: true }), <% } %>viteReact()<% if (tailwind) { %>, tailwindcss()<% } %><% if (addOnEnabled['module-federation']) { %>, federation(federationConfig)<% } %><% if (addOnEnabled['pwa']) { %>, VitePWA({
    registerType: 'autoUpdate',
    injectRegister: false,

    pwaAssets: {
      disabled: false,
      config: true,
    },
    manifestFilename: 'manifest.json',
    manifest: {
      name: pkg.name,
      short_name: pkg.name,
      description: pkg.description || pkg.name,
      theme_color: '#ffffff',
    },

    workbox: {
      globPatterns: ['**/*.{js,css,html,svg,png,ico}'],
      cleanupOutdatedCaches: true,
      clientsClaim: true,
    },

    devOptions: {
      enabled: false,
      navigateFallback: 'index.html',
      suppressWarnings: true,
      type: 'module',
    },
  })<% } %>],
  test: {
    globals: true,
    environment: "jsdom",
  },
  resolve: {
    alias: {
      '@': resolve(__dirname, './src'),
    },
  }
});
